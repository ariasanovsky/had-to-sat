I. making sathad.py work (well) in python
    A. packages/high level stuff:
        1. [still keep?] matrix
        2. [kept] boolean formulas

    B. handling files from the terminal:
        1. [done] Sloane files (n<=28)
        2. [done-ish] handle hex format for n=32 (from KTR site)
        3. write cnf files rather than storing too many huge lists of tuples
    
    C. optimization:
        1. does adding variables for *all* edges slow the SAT solver down?
        2. memory, matrices, tuple lists
        
    D. algorithm design:
        1. should we be inverting along rows or columns? 


II. program communication
    A. Glucose (C++):
        1. get *all* solutions
            - addClause( -sol_1 -sol_2 ... -sol_{K-1} ) for every new solution sol_1 ... sol_N
            concerning a KxK Hadamard matrix
        2. certify that original cnf + new clauses is UNSAT

    B. nauty (C):
        1. get the g6 strings automatically
            - see see I.C.1

III. analyzing code output
    A. motivating questions:
        1. when do H, H' diagonalize the same graphs?
        2. are all Hadamard-diagonalizable graphs Abelian Cayley graphs? 
        3. if G is Had.-diag'able, why can it decompose into non-Had.-diag'able graphs? 

